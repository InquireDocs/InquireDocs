name: Pipeline

on:
  push:
    branches:
      - main
    tags:
      - '*.*.*'
  pull_request:
    branches:
      - main

env:
  PYTHON_VERSION: '3.12'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Run linting with Flake8
        run: make lint

  test:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -r requirements.txt
      - name: Run tests
        run: make test

  # build-docker:
  #   runs-on: ubuntu-latest
  #   needs: [test]
  #   if: github.event_name != 'pull_request' || github.base_ref == 'master' # Skip pushing for pull requests
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Set Docker image tag
  #       id: set-tag
  #       run: |
  #         if [[ "${{ github.event_name }}" == "pull_request" ]]; then
  #           echo "tag=pr-${{ github.event.number }}" >> $GITHUB_ENV
  #         elif [[ "${{ github.ref }}" == refs/heads/master ]]; then
  #           echo "tag=beta-${{ github.sha::8 }}" >> $GITHUB_ENV
  #         elif [[ "${{ github.ref }}" =~ refs/tags/v ]]; then
  #           echo "tag=${{ github.ref#refs/tags/ }}" >> $GITHUB_ENV
  #         else
  #           echo "tag=latest" >> $GITHUB_ENV
  #         fi

  #     - name: Build Docker image
  #       run: docker build -t my-app:${{ env.tag }} .

  #     - name: Log in to DockerHub
  #       if: github.event_name != 'pull_request'
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Push Docker image
  #       if: github.event_name != 'pull_request'
  #       run: |
  #         docker tag my-app:${{ env.tag }} ${{ secrets.DOCKER_USERNAME }}/my-app:${{ env.tag }}
  #         docker push ${{ secrets.DOCKER_USERNAME }}/my-app:${{ env.tag }}
